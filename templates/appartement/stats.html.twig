{% extends 'base.html.twig' %}

{% block title %}Statistiques{% endblock %}

{% block body %}
     <main id="main" class="main">

    <h1>Statistiques</h1>

   {{ form_start(form) }}
<div class="form-group">
    <label for="{{ form.type.vars.id }}" class="form-label">{{ form.type.vars.label }}</label>
    {{ form_widget(form.type) }}
</div>
<div class="form-group">
    <label for="{{ form.startDate.vars.id }}" class="form-label">{{ form.startDate.vars.label }}</label>
    {{ form_widget(form.startDate) }}
</div>
<div class="form-group">
    <label for="{{ form.endDate.vars.id }}" class="form-label">{{ form.endDate.vars.label }}</label>
    {{ form_widget(form.endDate) }}
</div>
<div class="form-group">
    <label for="{{ form.nbrEtage.vars.id }}" class="form-label">{{ form.nbrEtage.vars.label }}</label>
    {{ form_widget(form.nbrEtage) }}
</div>
<div class="form-group">
    {{ form_widget(form.submit) }}
</div>
{{ form_end(form) }}

    {# Affichage des statistiques #}
    <div>
        <p>Consommation totale: {{ consommationTotale }}</p>
        <p>Montant total: {{ montantTotal }}</p>
    </div>

    {# Affichage du graphique avec Chart.js #}
    <canvas id="myChart" width="400" height="400"></canvas>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Récupération des données pour le graphique
       const labels = {{ factures|map(facture => facture.idfacture)|json_encode|raw }};
const consommations = {{ factures|map(facture => facture.consommation)|json_encode|raw }};
const montants = {{ factures|map(facture => facture.montant)|json_encode|raw }};
   function applyColor(data) {
        return data.map(value => {
            return value > 100 ? 'rgba(255, 0, 0, 0.2)' : 'rgba(54, 162, 235, 0.2)';
        });
    }
        // Création du graphique
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Consommation',
                    data: consommations,
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }, {
                    label: 'Montant',
                    data: montants,
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>
            </main><!-- End #main -->
    <a href="{{ path('app_appartement_index') }}">Retour à la liste</a>

{% endblock %}